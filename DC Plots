import pandas as pd
import plotly.graph_objs as go
import glob

def load_files(file_pattern):
    files = glob.glob(file_pattern)
    data = {}
    for file in files:
        df = pd.read_csv(file)
        # Normalize the dates
        df['Normalized Month'] = df.groupby('API 14')['Date'].rank(method='dense').astype(int)
        # Extract the month count from the file name (assumes the format 'Delaware_NM_x_Months_Combined_Monthly.csv')
        month_count = int(file.split('_')[2])
        data[month_count] = df
    return data

def create_production_plots(data_dict):
    # Initialize empty DataFrame to aggregate data
    aggregated_data = pd.DataFrame()

    # Iterate through the dictionary to combine data
    for key in sorted(data_dict.keys()):
        df = data_dict[key]
        df['Month'] = key
        aggregated_data = pd.concat([aggregated_data, df], ignore_index=True)

    # Extract months and summed production/forecasted data
    months = aggregated_data['Month'].unique()
    summed_production_cols = [col for col in aggregated_data.columns if 'Oil Production' in col]
    forecasted_data_cols = [col for col in aggregated_data.columns if 'Oil Forecast' in col]

    # Scatter chart
    scatter = go.Figure()
    for col in summed_production_cols:
        for month in months:
            monthly_data = aggregated_data[aggregated_data['Month'] == month]
            scatter.add_trace(go.Scatter(x=monthly_data['Normalized Month'], y=monthly_data[col], mode='lines', name=f'Summed Production {month}'))

    for col in forecasted_data_cols:
        for month in months:
            monthly_data = aggregated_data[aggregated_data['Month'] == month]
            scatter.add_trace(go.Scatter(x=monthly_data['Normalized Month'], y=monthly_data[col], mode='lines', name=f'Forecasted Data {month}', line=dict(dash='dot')))
    
    scatter.update_layout(title='Production Data', xaxis_title='Normalized Month', yaxis_title='Production', yaxis_type='log')

    # Cumulative production graph
    cum_graph = go.Figure()
    for col in summed_production_cols:
        cumulative_production = aggregated_data.groupby('Month')[col].sum().cumsum()
        cum_graph.add_trace(go.Scatter(x=cumulative_production.index, y=cumulative_production, mode='lines', name=f'Cumulative Production {col}'))
    
    cum_graph.update_layout(title='Cumulative Production', xaxis_title='Months', yaxis_title='Cumulative Production')

    # Save to HTML
    scatter.write_html('scatter.html')
    cum_graph.write_html('cumulative.html')

# Main execution
file_pattern = 'Delaware_NM_*_Months_Combined_Monthly.csv'
data_dict = load_files(file_pattern)
create_production_plots(data_dict)
