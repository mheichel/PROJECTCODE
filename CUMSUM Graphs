import plotly.graph_objs as go
import pandas as pd

def create_production_plots(data_dict):
    # Initialize empty DataFrame to aggregate data
    aggregated_data = pd.DataFrame()

    # Iterate through the dictionary to combine data
    for key in sorted(data_dict.keys()):
        df = data_dict[key]
        df['Month'] = key
        aggregated_data = pd.concat([aggregated_data, df], ignore_index=True)

    # Extract months and summed production/forecasted data
    months = aggregated_data['Month'].unique()
    summed_production_cols = [col for col in aggregated_data.columns if 'Oil production' in col]
    forecasted_data_cols = [col for col in aggregated_data.columns if 'Oil forecast' in col]

    # Scatter chart
    scatter = go.Figure()
    for col in summed_production_cols:
        for month in months:
            monthly_data = aggregated_data[aggregated_data['Month'] == month]
            scatter.add_trace(go.Scatter(x=monthly_data['Month'], y=monthly_data[col], mode='lines', name=f'Summed Production {col}'))

    for col in forecasted_data_cols:
        for month in months:
            monthly_data = aggregated_data[aggregated_data['Month'] == month]
            scatter.add_trace(go.Scatter(x=monthly_data['Month'], y=monthly_data[col], mode='lines', name=f'Forecasted Data {col}', line=dict(dash='dot')))
    
    scatter.update_layout(title='Production Data', xaxis_title='Months', yaxis_title='Production', yaxis_type='log')

    # Cumulative production graph
    cum_graph = go.Figure()
    for col in summed_production_cols:
        cumulative_production = aggregated_data.groupby('Month')[col].sum().cumsum()
        cum_graph.add_trace(go.Scatter(x=cumulative_production.index, y=cumulative_production, mode='lines', name=f'Cumulative Production {col}'))
    
    cum_graph.update_layout(title='Cumulative Production', xaxis_title='Months', yaxis_title='Cumulative Production')

    # Save to HTML
    scatter.write_html('scatter.html')
    cum_graph.write_html('cumulative.html')

# Example usage
# Assuming you have a dictionary named data_dict where the keys are integers (6, 12, 18, ..., 60)
data_dict = {
    6: pd.DataFrame({
        'API': [12345, 67890],
        'Oil production': [100, 200],
        'Oil forecast': [150, 250],
        'Month count': [6, 6]
    }),
    12: pd.DataFrame({
        'API': [12345, 67890],
        'Oil production': [120, 220],
        'Oil forecast': [180, 280],
        'Month count': [12, 12]
    }),
    # Add other dataframes for 18, 24, ..., 60
}

create_production_plots(data_dict)
