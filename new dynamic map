def calculate_percent_error(data_dict):
    percent_errors = {}

    # Ensure 60-month data is processed first
    if 60 not in data_dict:
        raise ValueError("60-month data is required to calculate percent errors.")
    
    # Extract 60-month cumulative forecast
    cum_60_df = data_dict[60]
    cum_60 = cum_60_df.groupby('API 14')['Cumulative Forecast'].last().reset_index()
    cum_60 = cum_60.rename(columns={'Cumulative Forecast': 'Cumulative Forecast 60'})
    
    # Calculate percent errors for other months
    for month, df in data_dict.items():
        if month != 60:
            cum = df.groupby('API 14')['Cumulative Forecast'].last().reset_index()
            cum = cum.rename(columns={'Cumulative Forecast': f'Cumulative Forecast {month}'})
            cum_merged = cum_60.merge(cum, on='API 14')
            cum_merged[f'Percent Error {month}'] = ((cum_merged[f'Cumulative Forecast {month}'] - cum_60['Cumulative Forecast 60']) / cum_60['Cumulative Forecast 60']) * 100
            percent_errors[month] = cum_merged[['API 14', f'Percent Error {month}']]
    
    # Include the 60-month data in the result
    percent_errors[60] = cum_60
    
    return percent_errors
