# Load the second shapefile
shape_data2 = gpd.read_file('SecondShapefile.geojson')  # Replace with your second shapefile path
shape_data2.to_crs(epsg=4326, inplace=True)

# Spatial join to assign points to township polygons for the second shapefile
joined2 = gpd.sjoin(geo_data, shape_data2, how='left', op='within')

# Calculate average values for each township polygon for the second shapefile
for col in columns[3:]:
    months = col.split()[3]  # Extract the number of months
    avg_col_name = f'avg_{months.lower()}_months'
    shape_data2[avg_col_name] = joined2.groupby('index_right')[col].mean()

# Drop sections where all the average values are 0 for the second shapefile
non_zero_cols2 = [f'avg_{col.split()[3].lower()}_months' for col in columns[3:]]
shape_data2 = shape_data2[(shape_data2[non_zero_cols2] > 0).any(axis=1)]

# Create colormaps and GeoJSON data for the second shapefile
colormaps2 = {}
geojson_data2 = {}
for col in columns[3:]:
    months = col.split()[3]
    avg_col_name = f'avg_{months.lower()}_months'
    colormaps2[avg_col_name] = cm.LinearColormap(colors=['blue', 'green', 'yellow', 'orange', 'red'],
                                                vmin=shape_data2[avg_col_name].min(),
                                                vmax=150,
                                                caption=f'EUR Value ({months} Months)')
    geojson_data2[avg_col_name] = shape_data2[['geometry', avg_col_name]].to_json()
