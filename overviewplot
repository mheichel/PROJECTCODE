import plotly.graph_objects as go
import numpy as np
import pandas as pd
import os

def create_multiple_scatter_plots(df, unique_column, unique_values, columns_to_plot, file_name, title="Scatter Plot with P10, P50, and P90"):
    # Ensure the output directory exists
    output_dir = os.path.dirname(file_name)
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    
    # Define the x-axis labels
    x_labels = [
        '3 months daily', '3 months monthly', '6 months', '12 months', '18 months',
        '24 months', '30 months', '36 months', '42 months', '48 months', '54 months', '60 months'
    ]
    
    # Loop through the specified unique values and create individual scatter plots
    for unique_value in unique_values:
        filtered_df = df[df[unique_column] == unique_value]
        
        # Calculate the P10, P50, and P90 values for each column to plot
        p10_values = filtered_df[columns_to_plot].apply(lambda x: np.percentile(x, 10), axis=0)
        p50_values = filtered_df[columns_to_plot].apply(lambda x: np.percentile(x, 50), axis=0)
        p90_values = filtered_df[columns_to_plot].apply(lambda x: np.percentile(x, 90), axis=0)
        
        # Create scatter plot
        fig = go.Figure()
        
        # Add P10 line
        fig.add_trace(go.Scatter(x=x_labels, y=p10_values, mode='lines+markers', name='P10'))
        
        # Add P50 line
        fig.add_trace(go.Scatter(x=x_labels, y=p50_values, mode='lines+markers', name='P50'))
        
        # Add P90 line
        fig.add_trace(go.Scatter(x=x_labels, y=p90_values, mode='lines+markers', name='P90'))
        
        # Update layout
        fig.update_layout(
            title=f"{title} - {unique_value}",
            xaxis_title='Time Periods',
            yaxis_title='Values',
            legend_title='Percentiles'
        )
        
        # Save the plot as a PDF
        file_path = file_name.replace('.pdf', f'_{unique_value}.pdf')
        fig.write_image(file_path)

# Example usage
# Creating a sample DataFrame
data = {
    'UniqueColumn': ['A', 'A', 'B', 'B', 'C', 'C'] * 50,
    '3 months daily': np.random.rand(300) * 100,
    '3 months monthly': np.random.rand(300) * 100,
    '6 months': np.random.rand(300) * 100,
    '12 months': np.random.rand(300) * 100,
    '18 months': np.random.rand(300) * 100,
    '24 months': np.random.rand(300) * 100,
    '30 months': np.random.rand(300) * 100,
    '36 months': np.random.rand(300) * 100,
    '42 months': np.random.rand(300) * 100,
    '48 months': np.random.rand(300) * 100,
    '54 months': np.random.rand(300) * 100,
    '60 months': np.random.rand(300) * 100
}

df = pd.DataFrame(data)

# Unique values to filter
unique_values = ['A', 'B', 'C']

# Columns to plot
columns_to_plot = [
    '3 months daily', '3 months monthly', '6 months', '12 months', '18 months',
    '24 months', '30 months', '36 months', '42 months', '48 months', '54 months', '60 months'
]

# Output file name
file_name = "./scatter_plots/scatter_plot.pdf"

# Call the function
create_multiple_scatter_plots(df, 'UniqueColumn', unique_values, columns_to_plot, file_name)
